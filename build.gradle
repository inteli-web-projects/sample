subprojects {
	
    apply plugin: 'java'	
    apply plugin: 'groovy'

    version = '1.0.0-SNAPSHOT'
    group = 'za.co.inteliweb'
    configurations.compile.transitive = true  // Make sure transitive project dependencies are resolved.
    
    repositories {
        mavenCentral()
    }
    
    dependencies {
        groovy 'org.codehaus.groovy:groovy:1.6.5'
    }
    
    task initProject(description: 'Initialize project') << { task ->
        project.sourceSets*.allSource.srcDirTrees.flatten().dir.each { 
            println "Create $it"
            it.mkdirs() 
        }
    }
}

project(':sample-service') {
    
    dependencies {
	compile project(':sample-common')
	compile project(':sample-api')
        compile project(':sample-domain')
    }
}

project(':sample-api') {
    
    dependencies {
        compile project(':sample-common')
    }
}

project(':sample-web') {
    apply plugin: 'jetty' // jetty plugin extends war plugin, so we get all war plugin functionality as well.
      
    dependencies {
        compile project(':sample-service')  // Because configurations.compile.transitive = true we only have to specify services project, although we also reference dataaccess and domain projects.
    }
    
    // Add extra code to initProject task.
    initProject << { task ->
        def webInfDir = new File(task.project.webAppDir, '/WEB-INF')
        println "Create $webInfDir"
        webInfDir.mkdirs()
    }
}
